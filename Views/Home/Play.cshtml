@model MorseArCode.Models.UserViewModels.InGameViewModel

<script src="~/lib/jquery/dist/jquery.js"></script>

        <div class="row">
            <h3 class="col-md-3 text-center">Your Score</h3>
            <h3 class="col-md-3 text-center">Time Remaining</h3>
            <h3 class="col-md-3 text-center">High Score</h3>
            <h3 class="col-md-3 text-center">Avg. CPM</h3>
        </div>
            <h3 id="userScore" class="col-md-3 text-center">
				@Model.ApplicationUser.Score
            </h3>
            <h3 id="timer" class="col-md-3 text-center"></h3>
            <h3 id="hiscore" class="col-md-3 text-center">@Model.HighScore</h3>
            <h3 id="displayCPM" class="col-md-3 text-center">@Model.ApplicationUser.CPM</h3>
        </div>

		<h3 class="col-md-12 text-center">Tap Any Key And Enter The Following:</h3>

        <h1 id="challengeWord" class="col-md-12 text-center">Click Start To Begin</h1>

        <!-- Call the EditUserScore method inside of the Game controller -->
        @using (Html.BeginForm("EditUserScore", "Game", FormMethod.Post))
        {
            <div class="form-group">
                <label asp-for="Score" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input asp-for="Score" class="form-control" />
                    <span asp-validation-for="Score" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="CPM" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input asp-for="CPM" class="form-control" />
                    <span asp-validation-for="CPM" class="text-danger"></span>
                </div>
            </div>
            <input class="btn btn-default" type="submit" id="nextGame" value="Submit Scores">
        }

        <button class="btn btn-default" id="newWord">New Word</button>
        <button class="btn btn-default" id="userResetInput">Clear Input</button>
        <button class="btn btn-default" id="startCountdown">Start</button>

	<!-- BEGIN: Output. -->
	<div class="output">

		<p class="message">

			<span id="userResponse" class="characters"></span>

			<span class="possibleCharacters">
				<!-- This will be populated dynamically. -->
			</span>

		</p>

	</div>
	<!-- END: Output. -->


	<!-- BEGIN: Alphabet. -->
	<div class="alphabet">

		<h3>
			Morse Code Alphabet
		</h3>

		<ul class="characters">
			<!-- This will be populated dynamically. -->
		</ul>

		<!-- Define the template. -->
		<script type="application/x-template" class="template">

			<li>
				<span class="character"></span>
				<span class="sequence"></span>
			</li>

		</script>
	</div>

<script>
    // ***** Countdown Timer
    let count = 15 + 1; //1000 will  run it every second
        userResponse = document.getElementById("userResponse"),
        hiscore = document.getElementById("hiscore")
        startCountdown = document.getElementById("startCountdown");

    var countdown = document.getElementById("timer"),
        score = document.getElementById("Score");

    function cdDisplay() {
        countdown.innerHTML = "00:" + count;
    }

    function cdReset() {
        count = 15; //reset counter and display
        cdDisplay();
        clearInterval(counter); //clear the timer
        counter = setInterval(timer, 1000) //store counter
    }

    function clearCPM() {
        $("#CPM").html("");
    }

    $("#startCountdown").click(function() {
        if (count > 0) {
            $("#startCountdown").addClass("disabled");
        }
        if (countdown.innerHTML == "00:00") {
            $("#startCountdown").removeClass("disabled");
        }
        populateWords();
        counter = setInterval(timer, 1000)
        cdReset();
    });

    function queryScores() {
        let playerScore = parseInt(userScore.innerHTML);
        let databaseHiScore = parseInt(hiscore.innerHTML);
        if (playerScore > databaseHiScore) {
            $("#hiscore").html(playerScore);
        }
    }

    $("#userResetInput").click(function() {
        $("#userResponse").html("");
    });

    function timer() {
        count--;
        if (count < 10) {
            count = "0" + count
        }
        cdDisplay();
        if (count == "00") {
            $("#timer").html("00:00");
            $("#startCountdown").removeClass("disabled");
            clearInterval(counter);
            //counter ended, do something here
            return;
        }
        if (userResponse.innerHTML === challengeWord.innerHTML) {
            clearInterval(counter);
            alert("Correct!");
            countdown.innerHTML = "00:00"
            userScoreNum = parseInt(userScore.innerHTML);
            userScoreNum += 1000;
            userScore.innerHTML = userScoreNum;
            let newNum = userScore.innerHTML;
            score.value = newNum; 
            queryScores();
            populateCPM();
            $("#startCountdown").removeClass("disabled");
            characterCounter = 0;
            initialChar = 0;
            pastChar = 0;
            timeDifference = 0;
        }
    }
    timer();

    //Word Generator
    let levelOneWords = [
        "DOG",
        "GIT",
        "BUS",
        "INT",
        "WHO",
        "SOY",
        "CAT",
        "PIT",
        "FLY",
        "ELF",
        "SPY"
    ];

    let levelTwoWords = [
        "FIZZ",
        "BUZZ",
        "JUMP",
        "LAZY",
        "QUIZ",
        "DOJO",
        "ZOOM",
        "AQUA",
        "FLY",
        "EXPO",
        "HACK"
    ];

    var wordCounter = 0;

    function populateWords() {
        if (wordCounter >= 10) {
            wordCounter = 0;
        }
        wordCounter++;
        let newWord = levelTwoWords[wordCounter];
        $("#challengeWord").html(newWord);
        $("#userResponse").html("");
    }

    $(function () {
        $( document ).keyup(charactersPerMinute);
    });

    var characterCounter = 0;
    var initialChar = 0;
    var pastChar = 0;
    var timeDifference = 0;

    function charactersPerMinute() {
        let challengeSplit = challengeWord.innerHTML;
        let splittedChallenge = challengeSplit.split("");
        let userSplit = userResponse.innerHTML;
        let splittedUser = userSplit.split("");
        if (splittedChallenge[characterCounter] === splittedUser[characterCounter]) {
            characterCounter++;
            initialChar = new Date().getTime();
            console.log("initialChar", initialChar);
            console.log("pastChar", pastChar);
            if (pastChar != 0) {
                timeDifference += initialChar - pastChar;
                var userCPM = (Math.round(100 * characterCounter / timeDifference * 6000, 2) / 100);
                $('#displayCPM').html(userCPM);
                $("#CPM").val(userCPM);
            }
            pastChar = initialChar;
        }
    }

    function populateCPM() {
        var userCPM = $("#displayCPM").html()
        console.log("populateCPM", userCPM);
        //ajax call to update database
        //need to write a linq statement that will get the average CPM 
    }

    $("#newWord").click(function() {
        populateWords();
    });

</script>

<script src="~/js/app/morsecode.js" asp-append-version="true"></script>
<script src="~/js/app/initialize.js" asp-append-version="true"></script>
<script src="~/js/app/game.js" asp-append-version="true"></script>